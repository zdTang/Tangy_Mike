<h3>_LifeCycleChild</h3>


<hr />
@*@foreach (var item in EventType)
{
    @item
    <hr />
}*@
@for (int i = 0; i < EventType.Count; i++)
{
    @i

    @EventType[i]
    <hr />
}

@code {
    List<string> EventType = new List<string>();
    [Parameter]
    public int CountValue { get; set; }


    protected override void OnInitialized()
    {
        EventType.Add("Child - OnInitialized is called");
    }

    protected override async Task OnInitializedAsync()
    {
        EventType.Add("Child - OnInitializedAsync is called");
        await Task.Delay(1000);
    }

    protected override void OnParametersSet()
    {
        EventType.Add("Child-OnParametersSet is called");
    }

    protected override async Task OnParametersSetAsync()
    {
        EventType.Add("Child-OnParametersSetAsync is called");
    }
    protected override void OnAfterRender(bool firstRender)
    {
        //if (firstRender)
        //{
        //    CountValue = 111;
        //}
        //else
        //{
        //    CountValue = 999;

        //}
        EventType.Add("Child OnAfterRender is called");
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        EventType.Add("Child - OnAfterRenderAsync is called");
    }
}
