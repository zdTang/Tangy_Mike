@page "/learnBlazor/demoproduct"

<h2 class="text-primary">DemoProduct</h2>

<div class="border p-2 mt-2" style="background-color:azure">
    <div class="row">
        @foreach (var prod in Products)
        {
            <h2>Product - @prod.Id</h2>
            <div>Name-@prod.Name</div>
            <div>Show Properties:<input type="checkbox" @bind-value="prod.IsActive" checked="@(prod.IsActive?"checked":null)"></div>
            if (prod.IsActive)
            {
                foreach (var item in prod.ProductProperties)
                {
                    <div>@item.Key-@item.Value</div>
                }
                
            }
           



           <input type="button" class="btn btn-danger" style="width:100px;" value="Delete" />
           <input type="button" class="btn btn-success" style="width:100px;" value="Edit" />
        }
    </div>
</div>



@*Tutor's code*@
<p>Favorites Total : @SelectedFavouriteCount</p>
<p>Last Selected Product : @SelectedProduct</p>
<div class="border p-2 mt-2" style="background-color:azure">
    <div class="row">
        @foreach (var prod in Products)
        {
                @*here, "@prod"and @prod all work fine*@
            <_IndividualProduct prod="prod" 
                OnFavoriteUpdated="FavouriteCountUpdate"
                OnChoseProduct="ChooseProductUpdate"
            ></_IndividualProduct>
                <br />
        }
    </div>
</div>

@code {
    List<Demo_Product> Products = new();
    private int SelectedFavouriteCount { get; set; } = 0;
    private string SelectedProduct { get; set; } = "";

    protected override void OnInitialized()
    {
        Products.Add(new()
            {
                Id = 1,
                Name = "Midnight Blaze",
                IsActive = false,

                Price = 10.99,
                ProductProperties = new()
                {
                new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Rose"},
                     new Demo_ProductProp { Id = 2, Key = "Size", Value = "20oz"},
                    new Demo_ProductProp { Id = 3, Key = "Color", Value="Purple" }
                }
            });

        Products.Add(new()
            {
                Id = 2,
                Name = "Blossom Lily",
                IsActive = true,
                Price = 13.99,
                ProductProperties = new()
            {
                new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Lily" },
                new Demo_ProductProp { Id = 2, Key = "Size", Value = "18oz" },
                new Demo_ProductProp {Id = 3,Key = "Color",Value = "White"}
            }
            });
        Products.Add(new()
            {
                Id = 3,
                Name = "Blossom Lily3",
                IsActive = true,
                Price = 13.99,
                ProductProperties = new()
            {
                new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Lily" },
                new Demo_ProductProp { Id = 2, Key = "Size", Value = "18oz" },
                new Demo_ProductProp {Id = 3,Key = "Color",Value = "White"}
            }
            });
        Products.Add(new()
            {
                Id = 4,
                Name = "Blossom Lily4",
                IsActive = true,
                Price = 13.99,
                ProductProperties = new()
            {
                new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Lily" },
                new Demo_ProductProp { Id = 2, Key = "Size", Value = "18oz" },
                new Demo_ProductProp {Id = 3,Key = "Color",Value = "White"}
            }
            });
    }

    protected void FavouriteCountUpdate(bool isSelected)
    {
        if (isSelected)
        {
            SelectedFavouriteCount++;
        }
        else
        {
            SelectedFavouriteCount--;
        }
    }

    protected void ChooseProductUpdate(string selectedProduct)
    {
        //operate DOM to toggle 
        SelectedProduct = selectedProduct;
    }
}
